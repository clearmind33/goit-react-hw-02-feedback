{"ast":null,"code":"var _jsxFileName = \"/home/sergiy/GitHub/zacademi/goit-react-hw-02-feedback/src/components/App.js\";\nimport React, { useState } from 'react';\nimport { Notification } from './Notification/Notification';\nimport { Statistics } from './Statistics/Statistics';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Section } from './Section/Section';\nimport options from './data/options.json';\nimport './App.css';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleLeaveFeedback = id => {\n    if (id === 1) setGood(value => value + 1);\n    if (id === 2) setNeutral(value => value + 1);\n    if (id === 3) setBad(value => value + 1);\n  };\n\n  const totalValue = () => good + neutral + bad;\n\n  const positivePercentage = () => {\n    const total = good + neutral + bad;\n    const percent = good * 100 / total;\n    return parseFloat(percent.toFixed(1)) || 0;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Section, {\n    title: \"Pleace leave feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeedbackOptions, {\n    options: options,\n    onLeaveFeedback: handleLeaveFeedback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Section, {\n    title: \"Statistics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, totalValue() ? /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    total: totalValue(),\n    positivePercentage: positivePercentage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Notification, {\n    message: \"No feedback given\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sergiy/GitHub/zacademi/goit-react-hw-02-feedback/src/components/App.js"],"names":["React","useState","Notification","Statistics","FeedbackOptions","Section","options","App","good","setGood","neutral","setNeutral","bad","setBad","handleLeaveFeedback","id","value","totalValue","positivePercentage","total","percent","parseFloat","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;AAEA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMa,mBAAmB,GAAGC,EAAE,IAAI;AAChC,QAAIA,EAAE,KAAK,CAAX,EAAcN,OAAO,CAACO,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAP;AACd,QAAID,EAAE,KAAK,CAAX,EAAcJ,UAAU,CAACK,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAV;AACd,QAAID,EAAE,KAAK,CAAX,EAAcF,MAAM,CAACG,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAN;AACf,GAJD;;AAMA,QAAMC,UAAU,GAAG,MAAMT,IAAI,GAAGE,OAAP,GAAiBE,GAA1C;;AAEA,QAAMM,kBAAkB,GAAG,MAAM;AAC/B,UAAMC,KAAK,GAAGX,IAAI,GAAGE,OAAP,GAAiBE,GAA/B;AACA,UAAMQ,OAAO,GAAIZ,IAAI,GAAG,GAAR,GAAeW,KAA/B;AACA,WAAOE,UAAU,CAACD,OAAO,CAACE,OAAR,CAAgB,CAAhB,CAAD,CAAV,IAAkC,CAAzC;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEhB,OAA1B;AAAmC,IAAA,eAAe,EAAEQ,mBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIG,UAAU,kBACN,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAET,IAAlB;AAAwB,IAAA,OAAO,EAAEE,OAAjC;AAA0C,IAAA,GAAG,EAAEE,GAA/C;AAAoD,IAAA,KAAK,EAAEK,UAAU,EAArE;AAAyE,IAAA,kBAAkB,EAAEC,kBAAkB,EAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAEN,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CAJF,CADF;AAcD;;AAED,eAAeX,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { Notification } from './Notification/Notification';\nimport { Statistics } from './Statistics/Statistics';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Section } from './Section/Section';\n\nimport options from './data/options.json'\n\nimport './App.css';\n\nfunction App() {\n\n  const [good, setGood] = useState(0)\n\n  const [neutral, setNeutral] = useState(0)\n\n  const [bad, setBad] = useState(0)\n\n  const handleLeaveFeedback = id => {\n    if (id === 1) setGood(value => value + 1)\n    if (id === 2) setNeutral(value => value + 1)\n    if (id === 3) setBad(value => value + 1)\n  }\n\n  const totalValue = () => good + neutral + bad\n\n  const positivePercentage = () => {\n    const total = good + neutral + bad\n    const percent = (good * 100) / total\n    return parseFloat(percent.toFixed(1)) || 0\n  }\n\n  return (\n    <div className='App'>\n      <Section title='Pleace leave feedback'>\n        <FeedbackOptions options={options} onLeaveFeedback={handleLeaveFeedback} />\n      </Section>\n      <Section title='Statistics'>\n        {\n          totalValue()\n            ? <Statistics good={good} neutral={neutral} bad={bad} total={totalValue()} positivePercentage={positivePercentage()} />\n            : <Notification message=\"No feedback given\" />\n        }\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}