{"ast":null,"code":"import _slicedToArray from\"/home/sergiy/GitHub/zacademi/goit-react-hw-02-feedback/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Notification}from'./Notification/Notification';import{Statistics}from'./Statistics/Statistics';import{FeedbackOptions}from'./FeedbackOptions/FeedbackOptions';import{Section}from'./Section/Section';import options from'./data/options.json';import'./App.css';function App(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),good=_useState2[0],setGood=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),neutral=_useState4[0],setNeutral=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),bad=_useState6[0],setBad=_useState6[1];var handleLeaveFeedback=function handleLeaveFeedback(id){if(id===1)setGood(function(value){return value+1;});if(id===2)setNeutral(function(value){return value+1;});if(id===3)setBad(function(value){return value+1;});};var totalValue=function totalValue(){return good+neutral+bad;};var positivePercentage=function positivePercentage(){var total=good+neutral+bad;var percent=good*100/total;return parseFloat(percent.toFixed(1))||0;};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Section,{title:\"Pleace leave feedback\"},/*#__PURE__*/React.createElement(FeedbackOptions,{options:options,onLeaveFeedback:handleLeaveFeedback})),/*#__PURE__*/React.createElement(Section,{title:\"Statistics\"},totalValue()?/*#__PURE__*/React.createElement(Statistics,{good:good,neutral:neutral,bad:bad,total:totalValue(),positivePercentage:positivePercentage()}):/*#__PURE__*/React.createElement(Notification,{message:\"No feedback given\"})));}export default App;","map":{"version":3,"sources":["/home/sergiy/GitHub/zacademi/goit-react-hw-02-feedback/src/components/App.js"],"names":["React","useState","Notification","Statistics","FeedbackOptions","Section","options","App","good","setGood","neutral","setNeutral","bad","setBad","handleLeaveFeedback","id","value","totalValue","positivePercentage","total","percent","parseFloat","toFixed"],"mappings":"6KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,YAAT,KAA6B,6BAA7B,CACA,OAASC,UAAT,KAA2B,yBAA3B,CACA,OAASC,eAAT,KAAgC,mCAAhC,CACA,OAASC,OAAT,KAAwB,mBAAxB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CAEA,MAAO,WAAP,CAEA,QAASC,CAAAA,GAAT,EAAe,eACWN,QAAQ,CAAC,CAAD,CADnB,wCACNO,IADM,eACAC,OADA,8BAGiBR,QAAQ,CAAC,CAAD,CAHzB,yCAGNS,OAHM,eAGGC,UAHH,8BAKSV,QAAQ,CAAC,CAAD,CALjB,yCAKNW,GALM,eAKDC,MALC,eAOb,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAC,EAAE,CAAI,CAChC,GAAIA,EAAE,GAAK,CAAX,CAAcN,OAAO,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAAG,CAAZ,EAAN,CAAP,CACd,GAAID,EAAE,GAAK,CAAX,CAAcJ,UAAU,CAAC,SAAAK,KAAK,QAAIA,CAAAA,KAAK,CAAG,CAAZ,EAAN,CAAV,CACd,GAAID,EAAE,GAAK,CAAX,CAAcF,MAAM,CAAC,SAAAG,KAAK,QAAIA,CAAAA,KAAK,CAAG,CAAZ,EAAN,CAAN,CACf,CAJD,CAMA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMT,CAAAA,IAAI,CAAGE,OAAP,CAAiBE,GAAvB,EAAnB,CAEA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,GAAMC,CAAAA,KAAK,CAAGX,IAAI,CAAGE,OAAP,CAAiBE,GAA/B,CACA,GAAMQ,CAAAA,OAAO,CAAIZ,IAAI,CAAG,GAAR,CAAeW,KAA/B,CACA,MAAOE,CAAAA,UAAU,CAACD,OAAO,CAACE,OAAR,CAAgB,CAAhB,CAAD,CAAV,EAAkC,CAAzC,CACD,CAJD,CAMA,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,OAAD,EAAS,KAAK,CAAC,uBAAf,eACE,oBAAC,eAAD,EACE,OAAO,CAAEhB,OADX,CAEE,eAAe,CAAEQ,mBAFnB,EADF,CADF,cAOE,oBAAC,OAAD,EAAS,KAAK,CAAC,YAAf,EACGG,UAAU,gBACT,oBAAC,UAAD,EACE,IAAI,CAAET,IADR,CAEE,OAAO,CAAEE,OAFX,CAGE,GAAG,CAAEE,GAHP,CAIE,KAAK,CAAEK,UAAU,EAJnB,CAKE,kBAAkB,CAAEC,kBAAkB,EALxC,EADS,cAST,oBAAC,YAAD,EAAc,OAAO,CAAC,mBAAtB,EAVJ,CAPF,CADF,CAuBD,CAED,cAAeX,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { Notification } from './Notification/Notification';\nimport { Statistics } from './Statistics/Statistics';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Section } from './Section/Section';\n\nimport options from './data/options.json';\n\nimport './App.css';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n\n  const [neutral, setNeutral] = useState(0);\n\n  const [bad, setBad] = useState(0);\n\n  const handleLeaveFeedback = id => {\n    if (id === 1) setGood(value => value + 1);\n    if (id === 2) setNeutral(value => value + 1);\n    if (id === 3) setBad(value => value + 1);\n  };\n\n  const totalValue = () => good + neutral + bad;\n\n  const positivePercentage = () => {\n    const total = good + neutral + bad;\n    const percent = (good * 100) / total;\n    return parseFloat(percent.toFixed(1)) || 0;\n  };\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Pleace leave feedback\">\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={handleLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {totalValue() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalValue()}\n            positivePercentage={positivePercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}